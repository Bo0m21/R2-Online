using Packets.Server.Login.Models.Send;
using Server.Login.Core.Factories.Interfaces;
using Server.Login.Network;

namespace Server.Login.Core.Factories
{
    /// <inheritdoc />
    public class AuthorizationFactory : IAuthorizationFactory
    {
        /// <inheritdoc />
        public void SendWelcome(LoginSession loginSession)
        {
            byte[] packetData = {
                0xd5, 0x49, 0x82, 0x55, 0x1d, 0x1a, 0x17, 0x2d, 0xbb, 0x4a, 0x45, 0x43, 0xb7, 0x25, 0xe2, 0x18,
                0xd0, 0x33, 0xd4, 0x08, 0xe6, 0x79, 0x6e, 0x46, 0x2a, 0x1a, 0xef, 0x71, 0xea, 0x34, 0x86, 0x03,
                0xb5, 0x2d, 0x14, 0x17, 0x66, 0x65, 0xfb, 0x91, 0x54, 0x5b, 0x4c, 0x08, 0x5a, 0x11, 0x43, 0x36,
                0x3e, 0xbb, 0x24, 0x41, 0x39, 0x9d, 0x73, 0x30, 0x2c, 0x2e, 0x1d, 0x03, 0x45, 0x48, 0x3c, 0x99,
                0x2c, 0xf9, 0x31, 0xcc, 0x54, 0xae, 0x71, 0x69, 0x70, 0xc7, 0x03, 0x5d, 0xef, 0x2b, 0xe1, 0x19,
                0x3a, 0x35, 0x56, 0x2a, 0x7f, 0x51, 0xbb, 0x74, 0x4e, 0x7c, 0x70, 0x1f, 0x6e, 0x1f, 0x0d, 0x79,
                0xc8, 0x07, 0x11, 0x4e, 0xa9, 0x35, 0xa9, 0x02, 0xe3, 0x19, 0xb1, 0x7e, 0xb3, 0x59, 0xeb, 0x53,
                0xfe, 0x76, 0xd4, 0x28, 0x7e, 0x53, 0x24, 0x73, 0x75, 0x3d, 0x27, 0x0a, 0xcd, 0x6a, 0x98, 0x57,
                0x32, 0x7c, 0xe2, 0x47, 0xbc, 0x72, 0x0d, 0x09, 0xcc, 0x26, 0x00, 0x00, 0x85, 0x1a, 0x48, 0x60,
                0xed, 0x77, 0x5f, 0x3b, 0x55, 0x42, 0x41, 0x28, 0x9d, 0x08, 0x7a, 0x40, 0x5e, 0x5e, 0x38, 0x62,
                0x1b, 0x2a, 0x4d, 0x89, 0x5a, 0xb9, 0x70, 0xf6, 0x3f, 0xc6, 0x76, 0xf2, 0x16, 0x0b, 0x12, 0x98,
                0x51, 0x56, 0x75, 0x18, 0x44, 0x4e, 0x46, 0xeb, 0x5e, 0x45, 0x37, 0xd1, 0x07, 0x45, 0x46, 0xeb,
                0x01, 0x00, 0x94, 0x00, 0xf0, 0x1d
            };

            ConnectionClientModel connectionClientModel = new ConnectionClientModel
            {
                DecryptKey = packetData
            };

            loginSession.Send(connectionClientModel);
        }

        /// <inheritdoc/>
        public void SendError(LoginSession loginSession, ServerErrorType serverErrorType)
        {
            LoginServerErrorModel loginServerErrorModel = new LoginServerErrorModel
            {
                ErrorType = serverErrorType
            };

            loginSession.Send(loginServerErrorModel);
        }
    }
}
